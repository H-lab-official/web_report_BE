name: Deploy Financial-Health-Check-BE App

on:
  push:
    branches:
      - main 

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Bun
        run: |
          curl -fsSL https://bun.sh/install | bash
          export BUN_INSTALL="$HOME/.bun"
          export PATH="$BUN_INSTALL/bin:$PATH"
          bun --version

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.1
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy to DigitalOcean
        env:
            HOST: ${{ secrets.SERVER_DOMAIN }}
            USERNAME: ${{ secrets.SERVER_USERNAME }}
            TARGET_DIR: /var/www/web_report_BE
            APP_NAME: WEB-Report-az
            DATABASE_URL: ${{ secrets.DATABASE_URL }}         
        run: |
            ssh -o StrictHostKeyChecking=no $USERNAME@$HOST << EOF
              export BUN_INSTALL="$HOME/.bun"
              export PATH="\$BUN_INSTALL/bin:\$PATH"
              cd $TARGET_DIR
              
              echo "Pulling latest code..."
              git pull origin ${GITHUB_REF#refs/heads/} || { echo "Git pull failed"; exit 1; }
              
              echo "Checking latest commit..."
              git log -1
              
              echo "Setting up environment..."
              echo "DATABASE_URL=\"${DATABASE_URL}\"" > .env
              
              echo "Installing dependencies..."
              bun install || { echo "Bun install failed"; exit 1; }
              
              echo "Generating Prisma files..."
              bunx prisma generate || { echo "Prisma generate failed"; exit 1; }
              
              # Check if ecosystem.config.js exists before moving
              if [ -f ecosystem.config.js ]; then
                mv ecosystem.config.js ecosystem.config.cjs
              else
                echo "ecosystem.config.js not found, skipping mv command"
              fi
              
              echo "Managing PM2 processes..."
              if pm2 list | grep -q $APP_NAME; then
                echo "Restarting application: $APP_NAME"
                pm2 stop $APP_NAME || { echo "PM2 stop failed"; exit 1; }
                pm2 delete $APP_NAME || { echo "PM2 delete failed"; exit 1; }
                pm2 start ecosystem.config.cjs || { echo "PM2 start failed"; exit 1; }
              else
                echo "Starting application: $APP_NAME"
                pm2 start ecosystem.config.cjs || { echo "PM2 start failed"; exit 1; }
              fi
              
              pm2 save || { echo "PM2 save failed"; exit 1; }
            EOF
